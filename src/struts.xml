<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC  
    "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"  
    "http://struts.apache.org/dtds/struts-2.3.dtd">  
  
<struts>  

	<!-- 常量配置 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	<constant name="struts.multipart.maxSize" value="52428800"/>
	<!-- /static 为存放静态资源的路径，意为不拦截对此文件夹下文件的请求 -->
	<constant name="struts.action.excludePattern" value="/static/.*?" />

	 
	<!-- 普通action，实现直接跳转-->
    <package name="action" namespace="/action" extends="struts-default"> 
    	
    	<action name="LoginAction" class="action.LoginAction">
    		<!-- <result name="LoginSuccess">/WEB-INF/page/Content.jsp</result> -->
    		<result name="LoginSuccess">/WEB-INF/page/Main.jsp</result>
    		<result name="LoginError">/WEB-INF/page/error/LoginError.jsp</result>
    		<result name="LoginNoUser">/WEB-INF/page/error/LoginNoUser.jsp</result>
    		<result name="Admin">/WEB-INF/page/AdminCenter.jsp</result>
    	</action>  
    	
    	<action name="LogoutAction" class="action.LogoutAction">
    		<result name="Logout">/Forge.jsp</result>
    	</action> 
    	
    	<action name="VideoPlayAction" class="action.VideoPlayAction">
    		<!-- <result name="LoginSuccess">/WEB-INF/page/Content.jsp</result> -->
    		<result name="videoplay">/WEB-INF/page/VideoPlay.jsp</result>
    	</action>  
    	
    	<!-- 此action转为超链接设置/window.onload也可以-->
    	<action name="LinkAction" class="action.LinkAction">
    	
    		<result name="usercenter">/WEB-INF/page/UserCenter.jsp</result>
    		<result name="uploadvideo">/WEB-INF/page/VideoUpload.jsp</result>
    		<result name="uservip">/WEB-INF/page/VIPUser.jsp</result>
    		<result name="null_page">/WEB-INF/page/nullpage.jsp</result>
    		
    	</action>
    	
    	
    	<action name="DownLoadAction" class="action.DownLoadAction">
    		<result name="DownloadSuccess" type="stream">
    		 	<!-- 允许下载的文件类型：此处指定为所有的二进制文件类型 
            	在tomacat的conf/web.xml中找exe对应的<mime-type>
        		-->
            	<param name="contentType">application/octet-stream</param>
    			<!-- 下载的文件数据存放的方法，该方法返回一个InputStream   
				例如取值为inputStream的属性需要编写getInputStream()方法-->  
				<param name="inputName">filestream</param>  
				<!-- 下载头，包括：浏览器显示的文件名 
                filename=${downFileName}这不是el表达式，
                el表达式仅能用于jsp，这是struts在配置文件中的取值符号
            	-->
            	<param name="contentDisposition">attachment;filename=${downFileName}</param>
				<!-- 数据的缓冲大小 -->  
				<param name="bufferSize">40960</param> 
    		</result>
    	</action>
    	<action name="UploadAction" class="action.UploadAction">
    		 <!-- 显示成功的jsp页面 -->
             <result name="usercenter">/WEB-INF/page/UserCenter.jsp</result>
             <!-- 文件上传拦截器，限制运行上传的文件的类型，还有其他一个方法，这是其中一个 -->
                <interceptor-ref name="defaultStack">
                    <!-- 限制运行的文件的扩展名 fileUpload.allowedExtensions固定写法-->
                    <param name="fileUpload.allowedExtensions">mp4</param>
                </interceptor-ref> 
            <!-- 错误提示，档文件上传出现错误的时候，struts内部会返回input视图，
                	 错误视图，所以就需要我们在struts.xml中配置Input视图对应的错误页面 -->
             <!-- <result name="input">/uploadfile/error.jsp</result> -->
    	</action>
    	
    </package>  
    
    <!--基于ajax的action，实现局部刷新 -->
    <package name="ajaxaction" namespace="/ajaxaction" extends="json-default">
     
    	<action name="RegisterAction" class="ajaxaction.RegisterAction">
    		<result name="RegisterSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 与getResult对应 -->
				<param name="inputName">result</param>
    		</result>
    		<result name="RegisterFail" type="json">
    			<param name="contentType">text/html</param>
    				<!-- 与getResult对应 -->
				<param name="inputName">result</param>
    		</result>
    	</action>
		
		<action name="CollectAction" class="ajaxaction.CollectAction">
    		<result name="CollectSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 与getResult对应 -->
				<param name="inputName">collectresult</param>
    		</result>
    		<result name="CollectFail" type="json">
    			<param name="contentType">text/html</param>
    				<!-- 与getResult对应 -->
				<param name="inputName">result</param>
    		</result>
    	</action>
		
		<action name="LoadJsonAction" class="ajaxaction.LoadJsonAction">
    		<result name="LoadSuccess" type="stream">
    			<param name="contentType">text/html</param>
    			<!-- 与getResult对应 -->
				<param name="inputName">result</param>
    		</result>
    		<result name="LoadAjax" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="GetHistoryAction" class="ajaxaction.GetHistoryAction">
    		<result name="GetHistorySuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="GetUploadAction" class="ajaxaction.GetUploadAction">
    		<result name="GetUploadSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="GetCollectionAction" class="ajaxaction.GetCollectionAction">
    		<result name="GetCollectionSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="CommentAction" class="ajaxaction.CommentAction">
    		<result name="CommentSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="GetCommentAction" class="ajaxaction.GetCommentAction">
    		<result name="GetCommentSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    	<action name="SearchAction" class="ajaxaction.SearchAction">
    		<result name="SearchSuccess" type="json">
    			<param name="contentType">text/html</param>
    			<!-- 自动返回所有gettet对应数据 -->
				<param name="noCache">true</param>
    		</result>
    	</action>
    	
    </package> 
      
</struts> 